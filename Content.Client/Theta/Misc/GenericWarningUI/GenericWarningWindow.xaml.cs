using Content.Shared.Theta.ShipEvent.Misc.GenericWarningUI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Theta.Misc.GenericWarningUI;

[GenerateTypedNameReferences]
[Virtual]
public partial class GenericWarningWindow : DefaultWindow
{
    public event Action<BaseButton.ButtonEventArgs>? OnYesButtonPressed;
    public event Action<BaseButton.ButtonEventArgs>? OnNoButtonPressed;

    public GenericWarningWindow()
    {
        RobustXamlLoader.Load(this);

        YesButton.OnPressed += _ =>
        {
            OnYesButtonPressed?.Invoke(_);
            Close();
        };
        NoButton.OnPressed += _ =>
        {
            OnNoButtonPressed?.Invoke(_);
            Close();
        };
    }

    public void UpdateText(GenericWarningBoundUserInterfaceState state)
    {
        return;
    }
}
