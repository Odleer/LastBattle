using Content.Shared.Theta.ShipEvent.UI;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Theta.ShipEvent.UI;

[GenerateTypedNameReferences]
public sealed partial class CircularShieldConsoleWindow : DefaultWindow
{
    public event Action? OnParametersChanged;

    public bool Enabled;
    public bool Powered;
    public int Angle => ShieldAngleSlider.Value;
    public new int Width => ShieldWidthSlider.Value;
    public int Radius => ShieldRadiusSlider.Value;

    public CircularShieldConsoleWindow()
    {
        RobustXamlLoader.Load(this);
        
        ShieldEnableButton.OnPressed += _ =>
        {
            Enabled = !Enabled;
            OnParametersChanged?.Invoke();
        };
        ShieldAngleSlider.OnValueChanged += _ => OnParametersChanged?.Invoke();
        ShieldWidthSlider.OnValueChanged += _ => OnParametersChanged?.Invoke();
        ShieldRadiusSlider.OnValueChanged += _ => OnParametersChanged?.Invoke();
    }

    public void UpdateState(CircularShieldConsoleWindowBoundsUserInterfaceState state)
    {
        Enabled = state.Enabled;
        Powered = state.Powered;

        ShieldAngleSlider.Value = state.Angle;

        ShieldWidthSlider.Value = state.Width;
        ShieldWidthSlider.MaxValue = state.MaxWidth;
        
        ShieldRadiusSlider.Value = state.Radius;
        ShieldRadiusSlider.MaxValue = state.MaxRadius;
    }
}
